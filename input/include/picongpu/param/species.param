/* Copyright 2014-2018 Rene Widera, Richard Pausch
 *
 * This file is part of PIConGPU.
 *
 * PIConGPU is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * PIConGPU is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with PIConGPU.
 * If not, see <http://www.gnu.org/licenses/>.
 */

/** @file
 *
 * Forward declarations for speciesDefinition.param in case one wants to use
 * the same particle shape, interpolation, current solver and particle pusher
 * for all particle species.
 */

#pragma once

#include "picongpu/particles/shapes.hpp"
#include "picongpu/algorithms/FieldToParticleInterpolationNative.hpp"
#include "picongpu/algorithms/FieldToParticleInterpolation.hpp"
#include "picongpu/algorithms/AssignedTrilinearInterpolation.hpp"
#include "picongpu/particles/flylite/NonLTE.def"
#include "picongpu/fields/currentDeposition/Solver.def"


namespace picongpu
{


using UsedParticleShapee = particles::shapes::CIC;

using UsedField2Particlee = FieldToParticleInterpolation<
    UsedParticleShapee,
    AssignedTrilinearInterpolation>;

using UsedParticleCurrentSolvere = currentSolver::Esirkepov< UsedParticleShapee >;
using UsedParticlePushere = particles::pusher::Boris;

using UsedParticleShapeH = particles::shapes::CIC;

using UsedField2ParticleH = FieldToParticleInterpolation<
    UsedParticleShapeH,
    AssignedTrilinearInterpolation>;

using UsedParticleCurrentSolverH = currentSolver::Esirkepov< UsedParticleShapeH >;
using UsedParticlePusherH = particles::pusher::Boris;

using UsedParticleShapeC = particles::shapes::CIC;

using UsedField2ParticleC = FieldToParticleInterpolation<
    UsedParticleShapeC,
    AssignedTrilinearInterpolation>;

using UsedParticleCurrentSolverC = currentSolver::Esirkepov< UsedParticleShapeC >;
using UsedParticlePusherC = particles::pusher::Boris;

} // namespace picongpu
